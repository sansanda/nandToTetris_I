// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address,a=loadReg0,b=loadReg1,c=loadReg2,d=loadReg3,e=loadReg4,f=loadReg5,g=loadReg6,h=loadReg7);
    Register(in=in,load=loadReg0,out=outReg0);
    Register(in=in,load=loadReg1,out=outReg1);
    Register(in=in,load=loadReg2,out=outReg2);
    Register(in=in,load=loadReg3,out=outReg3);
    Register(in=in,load=loadReg4,out=outReg4);
    Register(in=in,load=loadReg5,out=outReg5);
    Register(in=in,load=loadReg6,out=outReg6);
    Register(in=in,load=loadReg7,out=outReg7);
    Mux8Way16(a=outReg0,b=outReg1,c=outReg2,d=outReg3,e=outReg4,f=outReg5,g=outReg6,h=outReg7,sel=address,out=out);
    
}